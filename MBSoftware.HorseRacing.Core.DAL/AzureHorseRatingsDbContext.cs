// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;

namespace MBSoftware.HorseRacing.Core.DAL
{
    public partial class AzureHorseRatingsDbContext : DbContext
    {
        public AzureHorseRatingsDbContext()
        {
        }

        public AzureHorseRatingsDbContext(DbContextOptions<AzureHorseRatingsDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<HorsesForConditions> HorsesForConditions { get; set; }
        public virtual DbSet<RaceCard> RaceCard { get; set; }
        public virtual DbSet<RaceCardHorse> RaceCardHorse { get; set; }
        public virtual DbSet<RaceCardHorseHistory> RaceCardHorseHistory { get; set; }
        public virtual DbSet<TrainerJockeyComboForm> TrainerJockeyComboForm { get; set; }
        public virtual DbSet<TrainerJockeyComboFormHistory> TrainerJockeyComboFormHistory { get; set; }
        public virtual DbSet<TrainerJockeyComboFormHorse> TrainerJockeyComboFormHorse { get; set; }
        public virtual DbSet<RaceResult> RaceResults { get; set; }

        public virtual DbSet<RaceResultHorse> RaceResultHorses { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<HorsesForConditions>(entity =>
            {
                entity.HasIndex(e => new { e.RaceDate, e.RaceTime, e.Course, e.HorseName })
                    .HasName("HorsesForConditions_UK")
                    .IsUnique();

                entity.Property(e => e.ClassWinPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Course)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DistWinPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.GoingWinPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.HorseName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RaceTime)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RaceCard>(entity =>
            {
                entity.HasIndex(e => new { e.RaceDate, e.RaceTime, e.Course })
                    .HasName("IDX_RACECARD_UNIQUE");

                entity.Property(e => e.Aw).HasColumnName("AW");

                entity.Property(e => e.Course)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Distance)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Going)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IrishGrade)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nhf).HasColumnName("NHF");

                entity.Property(e => e.PrizeMoney).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RaceName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RaceTime)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RaceType)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RaceCardHorse>(entity =>
            {
                entity.HasIndex(e => e.HorseName)
                    .HasName("idx_RaceCardHorse_Horsename");

                entity.Property(e => e.DecimalOdds).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.HeadGear)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HorseName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Jockey)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.JockeyClaim)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Odds)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rpr).HasColumnName("RPR");

                entity.Property(e => e.Trainer)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Ts).HasColumnName("TS");

                entity.Property(e => e.Weight)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.HasOne(d => d.RaceCard)
                    .WithMany(p => p.RaceCardHorse)
                    .HasForeignKey(d => d.RaceCardId)
                    .HasConstraintName("FK_dbo.RaceCardBasicHorses_dbo.RaceCards_RaceCardId");
            });

            modelBuilder.Entity<RaceCardHorseHistory>(entity =>
            {
                entity.HasIndex(e => e.HorseName)
                    .HasName("idx_RaceCardHorseHistory_Horsename");

                entity.HasIndex(e => new { e.RaceDate, e.RaceTime, e.HorseName })
                    .HasName("HorseHistory_UKey")
                    .IsUnique();

                entity.Property(e => e.Aw).HasColumnName("AW");

                entity.Property(e => e.Comment)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.Course)
                    .IsRequired()
                    .HasColumnName("course")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DecimalOdds).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Distance)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DistanceBeaten)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FailedToFinishReason)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Going)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HeadGear)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HorseName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IrishGrade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Jockey)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nhf).HasColumnName("NHF");

                entity.Property(e => e.Odds)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrizeMoney).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ProfitLoss).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RaceName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RaceTime)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RaceType)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Rpr).HasColumnName("RPR");

                entity.Property(e => e.Trainer)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Ts).HasColumnName("TS");

                entity.Property(e => e.Weight)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrainerJockeyComboForm>(entity =>
            {
                entity.HasIndex(e => new { e.Trainer, e.Jockey, e.RaceDate, e.Days })
                    .HasName("IDX_TrainerJockeyComboForm_UNIQUE");

                entity.Property(e => e.Ae)
                    .HasColumnName("AE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iv)
                    .HasColumnName("IV")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Jockey)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PlacedPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PlacedProfitLoss).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RaceDate).HasColumnType("datetime");

                entity.Property(e => e.Trainer)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WinPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.WinProfitLoss).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TrainerJockeyComboFormHistory>(entity =>
            {
                entity.Property(e => e.Aw).HasColumnName("AW");

                entity.Property(e => e.Course)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.HorseName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Jockey)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Odds)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RaceDate).HasColumnType("datetime");

                entity.Property(e => e.RaceTime)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RaceType)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Trainer)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.TrainerJockeyComboForm)
                    .WithMany(p => p.TrainerJockeyComboFormHistory)
                    .HasForeignKey(d => d.TrainerJockeyComboFormId)
                    .HasConstraintName("FK_TrainerJockeyComboFormHistory_TrainerJockeyComboForm");
            });

            modelBuilder.Entity<TrainerJockeyComboFormHorse>(entity =>
            {
                entity.Property(e => e.Course)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Form)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HorseName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Odds)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RaceDate).HasColumnType("datetime");

                entity.Property(e => e.RaceTime)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Weight)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.TrainerJockeyComboForm)
                    .WithMany(p => p.TrainerJockeyComboFormHorse)
                    .HasForeignKey(d => d.TrainerJockeyComboFormId)
                    .HasConstraintName("FK_dbo.TrainerJockeyComboFormHorse_TrainerJockeyComboForm");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}